"""fresh_baseline_schema

Revision ID: 9541bbc23bcd
Revises: 
Create Date: 2025-10-27 19:47:15.647414

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '9541bbc23bcd'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('broadcast_channels',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('timezone', sa.String(length=255), nullable=False),
    sa.Column('grid_size_minutes', sa.Integer(), nullable=False),
    sa.Column('grid_offset_minutes', sa.Integer(), nullable=False),
    sa.Column('rollover_minutes', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), server_default=sa.text('true'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_broadcast_channels')),
    sa.UniqueConstraint('name', name='uq_broadcast_channels_name')
    )
    op.create_table('broadcast_template',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), server_default=sa.text('true'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('NOW()'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_broadcast_template')),
    sa.UniqueConstraint('name', name=op.f('uq_broadcast_template_name'))
    )
    op.create_table('enrichers',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('enricher_id', sa.String(length=255), nullable=False),
    sa.Column('type', sa.String(length=50), nullable=False),
    sa.Column('scope', sa.String(length=50), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('config', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_enrichers')),
    sa.UniqueConstraint('enricher_id', name=op.f('uq_enrichers_enricher_id'))
    )
    op.create_index('ix_enrichers_enricher_id', 'enrichers', ['enricher_id'], unique=False)
    op.create_index('ix_enrichers_scope', 'enrichers', ['scope'], unique=False)
    op.create_index('ix_enrichers_type', 'enrichers', ['type'], unique=False)
    op.create_table('sources',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('external_id', sa.String(length=255), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('type', sa.String(length=50), nullable=False),
    sa.Column('config', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_sources')),
    sa.UniqueConstraint('external_id', name=op.f('uq_sources_external_id'))
    )
    op.create_table('titles',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('kind', sa.Enum('MOVIE', 'SHOW', name='titlekind'), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('year', sa.Integer(), nullable=True),
    sa.Column('external_ids', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_titles'))
    )
    op.create_table('broadcast_schedule_day',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('channel_id', sa.Integer(), nullable=False),
    sa.Column('template_id', sa.Integer(), nullable=False),
    sa.Column('schedule_date', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('NOW()'), nullable=False),
    sa.ForeignKeyConstraint(['channel_id'], ['broadcast_channels.id'], name=op.f('fk_broadcast_schedule_day_channel_id_broadcast_channels'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['template_id'], ['broadcast_template.id'], name=op.f('fk_broadcast_schedule_day_template_id_broadcast_template'), ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_broadcast_schedule_day')),
    sa.UniqueConstraint('channel_id', 'schedule_date', name='uq_broadcast_schedule_day_channel_date')
    )
    op.create_index(op.f('ix_broadcast_schedule_day_channel_id'), 'broadcast_schedule_day', ['channel_id'], unique=False)
    op.create_table('broadcast_template_block',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('template_id', sa.Integer(), nullable=False),
    sa.Column('start_time', sa.Text(), nullable=False),
    sa.Column('end_time', sa.Text(), nullable=False),
    sa.Column('rule_json', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('NOW()'), nullable=False),
    sa.ForeignKeyConstraint(['template_id'], ['broadcast_template.id'], name=op.f('fk_broadcast_template_block_template_id_broadcast_template'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_broadcast_template_block'))
    )
    op.create_index(op.f('ix_broadcast_template_block_template_id'), 'broadcast_template_block', ['template_id'], unique=False)
    op.create_table('seasons',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('title_id', sa.UUID(), nullable=False),
    sa.Column('number', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['title_id'], ['titles.id'], name=op.f('fk_seasons_title_id_titles'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_seasons'))
    )
    op.create_table('source_collections',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('source_id', sa.UUID(), nullable=False),
    sa.Column('external_id', sa.String(length=255), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('sync_enabled', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('ingestible', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('config', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['source_id'], ['sources.id'], name=op.f('fk_source_collections_source_id_sources'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_source_collections')),
    sa.UniqueConstraint('source_id', 'external_id', name='uq_source_collections_source_external')
    )
    op.create_index('ix_source_collections_ingestible', 'source_collections', ['ingestible'], unique=False)
    op.create_index('ix_source_collections_source_id', 'source_collections', ['source_id'], unique=False)
    op.create_index('ix_source_collections_sync_enabled', 'source_collections', ['sync_enabled'], unique=False)
    op.create_table('assets',
    sa.Column('uuid', sa.UUID(), nullable=False),
    sa.Column('uri', sa.Text(), nullable=False),
    sa.Column('size', sa.BigInteger(), nullable=False),
    sa.Column('duration_ms', sa.Integer(), nullable=True),
    sa.Column('video_codec', sa.String(length=50), nullable=True),
    sa.Column('audio_codec', sa.String(length=50), nullable=True),
    sa.Column('container', sa.String(length=50), nullable=True),
    sa.Column('hash_sha256', sa.String(length=64), nullable=True),
    sa.Column('discovered_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('canonical', sa.Boolean(), nullable=False, comment='Asset approval status for downstream schedulers and runtime. True = approved for playout without human review. False = exists in inventory but not yet approved; may be in review_queue.'),
    sa.Column('state', sa.String(length=20), nullable=False, comment='Asset lifecycle state: new, enriching, ready, retired'),
    sa.Column('approved_for_broadcast', sa.Boolean(), nullable=False, comment="Asset approval status for broadcast. Must be true when state='ready'."),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('collection_uuid', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['collection_uuid'], ['source_collections.id'], name=op.f('fk_assets_collection_uuid_source_collections'), ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('uuid', name=op.f('pk_assets')),
    sa.UniqueConstraint('uri', name=op.f('uq_assets_uri'))
    )
    op.create_index('ix_assets_approved_for_broadcast', 'assets', ['approved_for_broadcast'], unique=False)
    op.create_index('ix_assets_canonical', 'assets', ['canonical'], unique=False)
    op.create_index('ix_assets_collection_uuid', 'assets', ['collection_uuid'], unique=False)
    op.create_index('ix_assets_discovered_at', 'assets', ['discovered_at'], unique=False)
    op.create_index('ix_assets_is_deleted', 'assets', ['is_deleted'], unique=False)
    op.create_index('ix_assets_state', 'assets', ['state'], unique=False)
    op.create_table('episodes',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('title_id', sa.UUID(), nullable=False),
    sa.Column('season_id', sa.UUID(), nullable=True),
    sa.Column('number', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('external_ids', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['season_id'], ['seasons.id'], name=op.f('fk_episodes_season_id_seasons'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['title_id'], ['titles.id'], name=op.f('fk_episodes_title_id_titles'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_episodes'))
    )
    op.create_table('path_mappings',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('collection_id', sa.UUID(), nullable=False),
    sa.Column('plex_path', sa.String(length=500), nullable=False),
    sa.Column('local_path', sa.String(length=500), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['collection_id'], ['source_collections.id'], name=op.f('fk_path_mappings_collection_id_source_collections'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_path_mappings'))
    )
    op.create_index('ix_path_mappings_collection_id', 'path_mappings', ['collection_id'], unique=False)
    op.create_table('broadcast_playlog_event',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uuid', sa.UUID(), nullable=False),
    sa.Column('channel_id', sa.Integer(), nullable=False),
    sa.Column('asset_uuid', sa.UUID(), nullable=False),
    sa.Column('start_utc', sa.DateTime(timezone=True), nullable=False),
    sa.Column('end_utc', sa.DateTime(timezone=True), nullable=False),
    sa.Column('broadcast_day', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('NOW()'), nullable=False),
    sa.ForeignKeyConstraint(['asset_uuid'], ['assets.uuid'], name=op.f('fk_broadcast_playlog_event_asset_uuid_assets'), ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['channel_id'], ['broadcast_channels.id'], name=op.f('fk_broadcast_playlog_event_channel_id_broadcast_channels'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_broadcast_playlog_event')),
    sa.UniqueConstraint('uuid', name=op.f('uq_broadcast_playlog_event_uuid'))
    )
    op.create_index('ix_broadcast_playlog_event_asset_uuid', 'broadcast_playlog_event', ['asset_uuid'], unique=False)
    op.create_index('ix_broadcast_playlog_event_broadcast_day', 'broadcast_playlog_event', ['broadcast_day'], unique=False)
    op.create_index(op.f('ix_broadcast_playlog_event_channel_id'), 'broadcast_playlog_event', ['channel_id'], unique=False)
    op.create_index('ix_broadcast_playlog_event_channel_start', 'broadcast_playlog_event', ['channel_id', 'start_utc'], unique=False)
    op.create_table('episode_assets',
    sa.Column('episode_id', sa.UUID(), nullable=False),
    sa.Column('asset_uuid', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['asset_uuid'], ['assets.uuid'], name=op.f('fk_episode_assets_asset_uuid_assets'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['episode_id'], ['episodes.id'], name=op.f('fk_episode_assets_episode_id_episodes'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('episode_id', 'asset_uuid', name=op.f('pk_episode_assets'))
    )
    op.create_table('markers',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('asset_uuid', sa.UUID(), nullable=False),
    sa.Column('kind', sa.Enum('CHAPTER', 'AVAIL', 'BUMPER', 'INTRO', 'OUTRO', name='markerkind'), nullable=False),
    sa.Column('start_ms', sa.Integer(), nullable=False),
    sa.Column('end_ms', sa.Integer(), nullable=False),
    sa.Column('payload', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.ForeignKeyConstraint(['asset_uuid'], ['assets.uuid'], name=op.f('fk_markers_asset_uuid_assets'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_markers'))
    )
    op.create_index('ix_markers_asset_uuid', 'markers', ['asset_uuid'], unique=False)
    op.create_index('ix_markers_kind', 'markers', ['kind'], unique=False)
    op.create_table('provider_refs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('entity_type', sa.Enum('TITLE', 'EPISODE', 'ASSET', name='entitytype'), nullable=False),
    sa.Column('entity_id', sa.UUID(), nullable=False),
    sa.Column('provider', sa.Enum('PLEX', 'JELLYFIN', 'FILESYSTEM', 'MANUAL', name='provider'), nullable=False),
    sa.Column('provider_key', sa.Text(), nullable=False),
    sa.Column('raw', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('title_id', sa.UUID(), nullable=True),
    sa.Column('episode_id', sa.UUID(), nullable=True),
    sa.Column('asset_uuid', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['asset_uuid'], ['assets.uuid'], name=op.f('fk_provider_refs_asset_uuid_assets'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['episode_id'], ['episodes.id'], name=op.f('fk_provider_refs_episode_id_episodes'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['title_id'], ['titles.id'], name=op.f('fk_provider_refs_title_id_titles'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_provider_refs'))
    )
    op.create_table('review_queue',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('asset_uuid', sa.UUID(), nullable=False),
    sa.Column('reason', sa.Text(), nullable=False),
    sa.Column('confidence', sa.Float(), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'RESOLVED', name='reviewstatus'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('resolved_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['asset_uuid'], ['assets.uuid'], name=op.f('fk_review_queue_asset_uuid_assets'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_review_queue'))
    )
    op.create_index('ix_review_queue_asset_uuid', 'review_queue', ['asset_uuid'], unique=False)
    op.create_index('ix_review_queue_created_at', 'review_queue', ['created_at'], unique=False)
    op.create_index('ix_review_queue_status', 'review_queue', ['status'], unique=False)
    # op.drop_table('alembic_version')  # Don't drop alembic_version table
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('alembic_version',
    sa.Column('version_num', sa.VARCHAR(length=32), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('version_num', name=op.f('alembic_version_pkc'))
    )
    op.drop_index('ix_review_queue_status', table_name='review_queue')
    op.drop_index('ix_review_queue_created_at', table_name='review_queue')
    op.drop_index('ix_review_queue_asset_uuid', table_name='review_queue')
    op.drop_table('review_queue')
    op.drop_table('provider_refs')
    op.drop_index('ix_markers_kind', table_name='markers')
    op.drop_index('ix_markers_asset_uuid', table_name='markers')
    op.drop_table('markers')
    op.drop_table('episode_assets')
    op.drop_index('ix_broadcast_playlog_event_channel_start', table_name='broadcast_playlog_event')
    op.drop_index(op.f('ix_broadcast_playlog_event_channel_id'), table_name='broadcast_playlog_event')
    op.drop_index('ix_broadcast_playlog_event_broadcast_day', table_name='broadcast_playlog_event')
    op.drop_index('ix_broadcast_playlog_event_asset_uuid', table_name='broadcast_playlog_event')
    op.drop_table('broadcast_playlog_event')
    op.drop_index('ix_path_mappings_collection_id', table_name='path_mappings')
    op.drop_table('path_mappings')
    op.drop_table('episodes')
    op.drop_index('ix_assets_state', table_name='assets')
    op.drop_index('ix_assets_is_deleted', table_name='assets')
    op.drop_index('ix_assets_discovered_at', table_name='assets')
    op.drop_index('ix_assets_collection_uuid', table_name='assets')
    op.drop_index('ix_assets_canonical', table_name='assets')
    op.drop_index('ix_assets_approved_for_broadcast', table_name='assets')
    op.drop_table('assets')
    op.drop_index('ix_source_collections_sync_enabled', table_name='source_collections')
    op.drop_index('ix_source_collections_source_id', table_name='source_collections')
    op.drop_index('ix_source_collections_ingestible', table_name='source_collections')
    op.drop_table('source_collections')
    op.drop_table('seasons')
    op.drop_index(op.f('ix_broadcast_template_block_template_id'), table_name='broadcast_template_block')
    op.drop_table('broadcast_template_block')
    op.drop_index(op.f('ix_broadcast_schedule_day_channel_id'), table_name='broadcast_schedule_day')
    op.drop_table('broadcast_schedule_day')
    op.drop_table('titles')
    op.drop_table('sources')
    op.drop_index('ix_enrichers_type', table_name='enrichers')
    op.drop_index('ix_enrichers_scope', table_name='enrichers')
    op.drop_index('ix_enrichers_enricher_id', table_name='enrichers')
    op.drop_table('enrichers')
    op.drop_table('broadcast_template')
    op.drop_table('broadcast_channels')
    # ### end Alembic commands ###
