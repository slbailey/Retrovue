"""fk behaviors + critical indexes/uniques

Revision ID: a0f57a8b7188
Revises: c3c29fe1bf2c
Create Date: 2025-10-22 21:20:08.510955

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'a0f57a8b7188'
down_revision: Union[str, Sequence[str], None] = 'c3c29fe1bf2c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # Don't drop alembic_version table as it's needed for tracking
    op.create_index('ix_assets_canonical', 'assets', ['canonical'], unique=False)
    op.create_index('ix_assets_discovered_at', 'assets', ['discovered_at'], unique=False)
    op.create_unique_constraint(op.f('uq_assets_uri'), 'assets', ['uri'])
    op.drop_constraint(op.f('fk_episode_assets_episode_id_episodes'), 'episode_assets', type_='foreignkey')
    op.drop_constraint(op.f('fk_episode_assets_asset_id_assets'), 'episode_assets', type_='foreignkey')
    op.create_foreign_key(op.f('fk_episode_assets_asset_id_assets'), 'episode_assets', 'assets', ['asset_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(op.f('fk_episode_assets_episode_id_episodes'), 'episode_assets', 'episodes', ['episode_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint(op.f('fk_episodes_season_id_seasons'), 'episodes', type_='foreignkey')
    op.drop_constraint(op.f('fk_episodes_title_id_titles'), 'episodes', type_='foreignkey')
    op.create_foreign_key(op.f('fk_episodes_title_id_titles'), 'episodes', 'titles', ['title_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(op.f('fk_episodes_season_id_seasons'), 'episodes', 'seasons', ['season_id'], ['id'], ondelete='CASCADE')
    op.create_index('ix_markers_asset_id', 'markers', ['asset_id'], unique=False)
    op.create_index('ix_markers_kind', 'markers', ['kind'], unique=False)
    op.drop_constraint(op.f('fk_markers_asset_id_assets'), 'markers', type_='foreignkey')
    op.create_foreign_key(op.f('fk_markers_asset_id_assets'), 'markers', 'assets', ['asset_id'], ['id'], ondelete='CASCADE')
    op.create_index('ix_path_mappings_collection_id', 'path_mappings', ['collection_id'], unique=False)
    op.drop_constraint(op.f('fk_path_mappings_collection_id_source_collections'), 'path_mappings', type_='foreignkey')
    op.create_foreign_key(op.f('fk_path_mappings_collection_id_source_collections'), 'path_mappings', 'source_collections', ['collection_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint(op.f('fk_provider_refs_asset_id_assets'), 'provider_refs', type_='foreignkey')
    op.drop_constraint(op.f('fk_provider_refs_title_id_titles'), 'provider_refs', type_='foreignkey')
    op.drop_constraint(op.f('fk_provider_refs_episode_id_episodes'), 'provider_refs', type_='foreignkey')
    op.create_foreign_key(op.f('fk_provider_refs_episode_id_episodes'), 'provider_refs', 'episodes', ['episode_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(op.f('fk_provider_refs_title_id_titles'), 'provider_refs', 'titles', ['title_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(op.f('fk_provider_refs_asset_id_assets'), 'provider_refs', 'assets', ['asset_id'], ['id'], ondelete='CASCADE')
    op.create_index('ix_review_queue_asset_id', 'review_queue', ['asset_id'], unique=False)
    op.create_index('ix_review_queue_created_at', 'review_queue', ['created_at'], unique=False)
    op.create_index('ix_review_queue_status', 'review_queue', ['status'], unique=False)
    op.drop_constraint(op.f('fk_review_queue_asset_id_assets'), 'review_queue', type_='foreignkey')
    op.create_foreign_key(op.f('fk_review_queue_asset_id_assets'), 'review_queue', 'assets', ['asset_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint(op.f('fk_seasons_title_id_titles'), 'seasons', type_='foreignkey')
    op.create_foreign_key(op.f('fk_seasons_title_id_titles'), 'seasons', 'titles', ['title_id'], ['id'], ondelete='CASCADE')
    op.create_index('ix_source_collections_enabled', 'source_collections', ['enabled'], unique=False)
    op.create_index('ix_source_collections_source_id', 'source_collections', ['source_id'], unique=False)
    op.create_unique_constraint('uq_source_collections_source_external', 'source_collections', ['source_id', 'external_id'])
    op.drop_constraint(op.f('fk_source_collections_source_id_sources'), 'source_collections', type_='foreignkey')
    op.create_foreign_key(op.f('fk_source_collections_source_id_sources'), 'source_collections', 'sources', ['source_id'], ['id'], ondelete='CASCADE')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(op.f('fk_source_collections_source_id_sources'), 'source_collections', type_='foreignkey')
    op.create_foreign_key(op.f('fk_source_collections_source_id_sources'), 'source_collections', 'sources', ['source_id'], ['id'])
    op.drop_constraint('uq_source_collections_source_external', 'source_collections', type_='unique')
    op.drop_index('ix_source_collections_source_id', table_name='source_collections')
    op.drop_index('ix_source_collections_enabled', table_name='source_collections')
    op.drop_constraint(op.f('fk_seasons_title_id_titles'), 'seasons', type_='foreignkey')
    op.create_foreign_key(op.f('fk_seasons_title_id_titles'), 'seasons', 'titles', ['title_id'], ['id'])
    op.drop_constraint(op.f('fk_review_queue_asset_id_assets'), 'review_queue', type_='foreignkey')
    op.create_foreign_key(op.f('fk_review_queue_asset_id_assets'), 'review_queue', 'assets', ['asset_id'], ['id'])
    op.drop_index('ix_review_queue_status', table_name='review_queue')
    op.drop_index('ix_review_queue_created_at', table_name='review_queue')
    op.drop_index('ix_review_queue_asset_id', table_name='review_queue')
    op.drop_constraint(op.f('fk_provider_refs_asset_id_assets'), 'provider_refs', type_='foreignkey')
    op.drop_constraint(op.f('fk_provider_refs_title_id_titles'), 'provider_refs', type_='foreignkey')
    op.drop_constraint(op.f('fk_provider_refs_episode_id_episodes'), 'provider_refs', type_='foreignkey')
    op.create_foreign_key(op.f('fk_provider_refs_episode_id_episodes'), 'provider_refs', 'episodes', ['episode_id'], ['id'])
    op.create_foreign_key(op.f('fk_provider_refs_title_id_titles'), 'provider_refs', 'titles', ['title_id'], ['id'])
    op.create_foreign_key(op.f('fk_provider_refs_asset_id_assets'), 'provider_refs', 'assets', ['asset_id'], ['id'])
    op.drop_constraint(op.f('fk_path_mappings_collection_id_source_collections'), 'path_mappings', type_='foreignkey')
    op.create_foreign_key(op.f('fk_path_mappings_collection_id_source_collections'), 'path_mappings', 'source_collections', ['collection_id'], ['id'])
    op.drop_index('ix_path_mappings_collection_id', table_name='path_mappings')
    op.drop_constraint(op.f('fk_markers_asset_id_assets'), 'markers', type_='foreignkey')
    op.create_foreign_key(op.f('fk_markers_asset_id_assets'), 'markers', 'assets', ['asset_id'], ['id'])
    op.drop_index('ix_markers_kind', table_name='markers')
    op.drop_index('ix_markers_asset_id', table_name='markers')
    op.drop_constraint(op.f('fk_episodes_season_id_seasons'), 'episodes', type_='foreignkey')
    op.drop_constraint(op.f('fk_episodes_title_id_titles'), 'episodes', type_='foreignkey')
    op.create_foreign_key(op.f('fk_episodes_title_id_titles'), 'episodes', 'titles', ['title_id'], ['id'])
    op.create_foreign_key(op.f('fk_episodes_season_id_seasons'), 'episodes', 'seasons', ['season_id'], ['id'])
    op.drop_constraint(op.f('fk_episode_assets_episode_id_episodes'), 'episode_assets', type_='foreignkey')
    op.drop_constraint(op.f('fk_episode_assets_asset_id_assets'), 'episode_assets', type_='foreignkey')
    op.create_foreign_key(op.f('fk_episode_assets_asset_id_assets'), 'episode_assets', 'assets', ['asset_id'], ['id'])
    op.create_foreign_key(op.f('fk_episode_assets_episode_id_episodes'), 'episode_assets', 'episodes', ['episode_id'], ['id'])
    op.drop_constraint(op.f('uq_assets_uri'), 'assets', type_='unique')
    op.drop_index('ix_assets_discovered_at', table_name='assets')
    op.drop_index('ix_assets_canonical', table_name='assets')
    # ### end Alembic commands ###
